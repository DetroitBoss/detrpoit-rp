import React, {Component} from 'react';
import {CustomEvent} from '../../modules/custom.event';
import './style.less'
import {CEF} from '../../modules/CEF';
import {observer} from "mobx-react";
import LoadScreenJoinStore from "../../stores/LoadScreenJoin";
import {alertsEnable, setInit} from '../../App';
import Logo from './img/logo.svg'
import vk from './img/vk.svg'
import tg from './img/tg.svg'
import ds from './img/ds.svg'
import enterButton from './img/enterButton.svg'
import textLogo from './img/textLogo.svg'

@observer
export class LoadScreenJoin extends Component<{
    LoadScreenJoinStore: LoadScreenJoinStore
}, {}> {
    store: LoadScreenJoinStore

    constructor(props: any) {
        super(props);
        this.store = this.props.LoadScreenJoinStore

        setTimeout((): void => {
            this.store.setState({loadingScreenStart: true});
            setTimeout((): void => {
                this.store.setState({allowEnter: true})
            }, 1000)
        }, 1500)
    }

    componentDidMount(): void {
        document.addEventListener("keyup", this.handleKeyUp, false);
        setTimeout((): void => {
            if (alertsEnable.startVoice) CEF.playSound('enteronyx');
        }, 300)
    }

    componentWillUnmount = (): void => {
        document.removeEventListener("keyup", this.handleKeyUp, false);
    }

    handleEnterAction = (): void => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è, –∫–∞–∫ –≤ handleKeyUp
        if (!this.store.allowEnter) return;
        if (!this.store.introScene) return;
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–≤—É–∫ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        CEF.stopSound();
        CustomEvent.triggerClient('fractionCfg:cefReady');
        
        if (!alertsEnable.enableIntro) {
            CustomEvent.triggerClient('loadingscreen:load');
            setTimeout((): void => {
                setInit();
            }, 1000);
            return;
        }
    
        this.store.setState({introScene: false, showVideo: true}, (): void => {
            setTimeout((): void => {
                this.store.setState({videoRun: true, loadingScreenStart: false});
                setTimeout((): void => {
                    CustomEvent.triggerClient('loadingscreen:load');
                }, 2000);
            }, 1000);
        });
    };

    handleKeyUp = (e: KeyboardEvent): void => {
        if (e.keyCode !== 13) return;
        this.handleEnterAction();
    }

    render(): JSX.Element {
        return <>
            <div className={"loadingScreenStart " + (this.store.loadingScreenStart ? 'show' : '')}>
                <div className='backbox'>
                    <img className='logobox' src={Logo} alt="" />
                    <img className='logotext' src={textLogo} alt="" />
                    <div className='subtext'>üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä! üéâ
                        –ú—ã –±–µ–∑—É–º–Ω–æ —Ä–∞–¥—ã, —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏! üéÆ
                        –ù–∞—à –ø—Ä–æ–µ–∫—Ç ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–µ—Å—Ç–æ –¥–ª—è –∏–≥—Ä—ã, —ç—Ç–æ —Ü–µ–ª—ã–π –º–∏—Ä, –≥–¥–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –Ω–∞–ø–æ–ª–Ω–µ–Ω –Ω–æ–≤—ã–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –∏ —è—Ä–∫–∏–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏. üåü

                        –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–ª—è –Ω–∞—à–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–º!

                        –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª –Ω–∞—Å.
                        –ü–æ–≥—Ä—É–∂–∞–π—Å—è –≤ –∏–≥—Ä—É –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∫–∞–∂–¥—ã–º –º–≥–Ω–æ–≤–µ–Ω–∏–µ–º! üöÄüí•</div>
                    <div className='box_social'>
                        <div className='box_stats'><img className='icon' src={vk}/> <span>vk.com/detroitgta5</span> </div>
                        <div className='box_stats'><img className='icon' src={ds}/> <span>discord.gg/EYYBeYxRV5</span> </div>
                        <div className='box_stats'><img className='icon' src={tg}/> <span>t.me/detroitgta5</span> </div>
                    </div>
                    <button className="button" onClick={this.handleEnterAction}>–ù–∞—á–∞—Ç—å –∏–≥—Ä—É <img src={enterButton} alt="Enter Button" /></button>
                    <div className="text">–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫—É—Ä—Å–æ—Ä, –Ω–∞–∂–º–∏—Ç–µ  ~ (–Å)</div>
                </div>
            </div>
        </>;
    }
}
